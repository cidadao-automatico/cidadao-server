smtp {
    host=smtp.gmail.com
    #port=25
    ssl=true
    user="your_user"
    password=your_password
    from="your_from_address"
}

securesocial {
    #
    # Where to redirect the user if SecureSocial can't figure that out from
    # the request that was received before authenticating the user
    #
    onLoginGoTo=/newuser

    #
    # Where to redirect the user when he logs out. If not set SecureSocial will redirect to the login page
    #
    onLogoutGoTo=/

    #
    # Enable SSL 
    #
    ssl=false   

    #
    # The controller class for assets. This is optional, only required
    # when you use a custom class for Assets.
    #
    #assetsController=controllers.ReverseMyCustomAssetsController

     cookie {
            idleTimeoutInMinutes=30
            absoluteTimeOutInMinutes=720
    }

    facebook {
        authorizationUrl="https://graph.facebook.com/oauth/authorize"
        accessTokenUrl="https://graph.facebook.com/oauth/access_token"
        clientId=1417403831810231
        clientSecret=de6ab736ec3c9d2c496bb8bd772a6885
        # this scope is the minimum SecureSocial requires.  You can add more if required by your app.
        scope=email
    }

    google {
        authorizationUrl="https://accounts.google.com/o/oauth2/auth"
        accessTokenUrl="https://accounts.google.com/o/oauth2/token"
        clientId="544477707220-8unc8d357kmr3gce09v6917egk90sjmu.apps.googleusercontent.com"
        clientSecret="tIlNVX1XhGCYPm7bwx_wRR3q"
        scope="https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email"
    }

    userpass {
        #
        # Enable username support, otherwise SecureSocial will use the emails as user names
        #
        withUserNameSupport=false
        sendWelcomeEmail=true
        enableGravatarSupport=true
        tokenDuration=60
        tokenDeleteInterval=5
        signupSkipLogin=false
    }

}