securesocial {
    #
    # Where to redirect the user if SecureSocial can't figure that out from
    # the request that was received before authenticating the user
    #
    onLoginGoTo=/user_home

    #
    # Where to redirect the user when he logs out. If not set SecureSocial will redirect to the login page
    #
    onLogoutGoTo=/

    #
    # Enable SSL 
    #
    ssl=false   

    #
    # The controller class for assets. This is optional, only required
    # when you use a custom class for Assets.
    #
    #assetsController=controllers.ReverseMyCustomAssetsController

     cookie {
            name=vigia_cookie
            path=/
            domain=www.vigiapolitico.com.br
            httpOnly=true
            idleTimeoutInMinutes=30
            absoluteTimeOutInMinutes=720
            makeTransient=true
    }

    twitter {
        requestTokenUrl="https://api.twitter.com/oauth/request_token"
        accessTokenUrl="https://api.twitter.com/oauth/access_token"
        authorizationUrl="https://api.twitter.com/oauth/authorize"
        consumerKey=OYgtfBeR7cDvBJTCfxxoQ
        consumerSecret=CY0HhsWtAX5rkE95sLSNhbMboekhLLeRq5CEACo5Gw
    }

    facebook {
        authorizationUrl="https://graph.facebook.com/oauth/authorize"
        accessTokenUrl="https://graph.facebook.com/oauth/access_token"
        clientId=577072012328031
        clientSecret=c053b152b263646d0af2af1a0b47fe89
        # this scope is the minimum SecureSocial requires.  You can add more if required by your app.
        scope=email
    }

    google {
        authorizationUrl="https://accounts.google.com/o/oauth2/auth"
        accessTokenUrl="https://accounts.google.com/o/oauth2/token"
        clientId=your_client_id
        clientSecret=your_client_secret
        scope="https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email"
    }

}